1: npx create-react-app my-project

2: npm run start

3: limpar arquivos desnecessário do react

4: construir componentes em App.js e voltar o JSX

USESTATE
5: usar o useState como função de incremento pra add e descremento pra remover dados(numeros),
   usar um useState como função boleana pra alterar o estado do setInterval como Running ou null, dentro do useEffect
   usar o useState tempo setTempo pra mostra o tempo que altera com o setinterval de acordo com a condicional runnig está ativa ou nula


USEEFFECT
6: usar o setInterval drentro do useEffect. o useEffect serve pra controla o efeito das funções dentro do bloco da função deixando assincrono em relação a dinamica das outras rotinas do bloco, passar um [] como segundo parâmetro pra estabilizar em uma única chamda

7: criar useState running e passar como segundo argumento do useEffect, em seguida criar um função que mude o estado de running no hook useEffect: toggleRunning, e passar no button iniciar OBS:o running que é uma função bollean  será responsavel em dizer quando o useEffect ira estar ativo ou não!

8: No componente MostrarTempo passar os minutos e segundo convertidos com a propriedade Math.rounds depois passar uma lógica ternária as constantes minutosStr e segundosStr

9: passar uma condicinal no JSX pra apenas renderizar o componete MostrarTempo se o state numVoltas for > 0 maior que zero, em seguida dividir o tempo pelo numero de voltar: {tempo/numVoltas}

10: criar a função reset passando o setTempo e o setNumVoltas =0 em seguida passar o evento onClick no Button reiniciar